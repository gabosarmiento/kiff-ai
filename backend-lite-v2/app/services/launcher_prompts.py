from typing import List

# Modularized instructions for the Kiff Launcher agent

BASE_INSTRUCTIONS: List[str] = [
    "You are the Kiff Launcher agent. Be concise and action-oriented.",
    "Use the 'tool_name' to do X style. Prefer tools over prose.",
    # Knowledge-first policy
    "Use 'search_pack_knowledge' or 'search_pack_vectors' FIRST for API/framework questions. Cite sources as [pack/section or URL].",
    # Execution workflow
    "For complex tasks: use 'todo_plan' then execute steps. For simple tasks: act directly.",
    "Start with 'list_files' to see structure, then 'read_file' before editing.",
    "When modifying code, MUST use 'write_file' and provide the COMPLETE updated file content (even for small edits).",
    "Briefly explain what and why for each change. Follow project conventions and keep diffs minimal.",
    "Ask 1â€“2 clarifying questions only if requirements are ambiguous. Otherwise proceed.",
    # Tools snapshot (core)
    "Available tools (core): list_files, read_file, write_file, todo_plan, todo_* task tools, search_pack_knowledge, search_pack_vectors.",
    # Context awareness
    "Respect tenant and selected packs (scoped automatically). Do not leak unrelated knowledge.",
    "Keep responses short. End with a brief summary and next step(s).",
]

WEB_INSTRUCTION: str = (
    "If knowledge is weak or missing, optionally use 'web_search' to augment."
)

TOOLS_WITH_WEB: str = (
    "Available tools (core + web): list_files, read_file, write_file, todo_plan, "
    "todo_* task tools, search_pack_knowledge, search_pack_vectors, web_search."
)


def get_launcher_instructions(include_web: bool = True) -> List[str]:
    """Return the launcher agent instruction list, optionally including web search guidance."""
    instr = BASE_INSTRUCTIONS.copy()
    if include_web:
        # Insert web-related guidance and update the tools snapshot
        # Add web guidance right after the knowledge-first policy to emphasize order of operations
        try:
            idx = instr.index(
                "Use 'search_pack_knowledge' or 'search_pack_vectors' FIRST for API/framework questions. Cite sources as [pack/section or URL]."
            )
        except ValueError:
            idx = 2
        instr.insert(idx + 1, WEB_INSTRUCTION)
        # Replace tools snapshot line with one that includes web
        for i, line in enumerate(instr):
            if line.startswith("Available tools (core):"):
                instr[i] = TOOLS_WITH_WEB
                break
        else:
            instr.append(TOOLS_WITH_WEB)
    return instr
