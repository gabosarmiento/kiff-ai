#!/usr/bin/env bash
set -euo pipefail

# This script bootstraps private/aws.env from your local ~/.aws config without copying secrets.
# It prefers the currently active AWS profile from env, then falls back to 'default'.
# It reads region from ~/.aws/config for the chosen profile (or defaults to eu-west-3).

AWS_CONFIG_FILE=${AWS_CONFIG_FILE:-$HOME/.aws/config}
AWS_CREDENTIALS_FILE=${AWS_SHARED_CREDENTIALS_FILE:-$HOME/.aws/credentials}
ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
OUT_FILE="$ROOT_DIR/private/aws.env"

PROFILE=${AWS_PROFILE:-default}
REGION=${AWS_REGION:-}

# Try to detect region from ~/.aws/config if not set
if [[ -z "${REGION}" && -f "$AWS_CONFIG_FILE" ]]; then
  # Profiles in config are like [profile myprofile] except 'default' which is [default]
  if [[ "$PROFILE" == "default" ]]; then
    REGION=$(awk -F= '/^\[default\]/{f=1} f && $1 ~ /region/ {gsub(/ /,""); print $2; exit}' "$AWS_CONFIG_FILE" || true)
  else
    # find region under [profile PROFILE]
    REGION=$(awk -v p="$PROFILE" -F= '/^\[profile[ ]+"?[^]]*"?\]$/ {sect=$0} sect ~ "\[profile[ ]+" p "\]" && $1 ~ /region/ {gsub(/ /,""); print $2; exit}' "$AWS_CONFIG_FILE" || true)
    if [[ -z "$REGION" ]]; then
      # alternative section format without quotes
      REGION=$(awk -v p="$PROFILE" -F= '/^\[profile[ ]+[^]]+\]$/ {sect=$0} sect ~ "\[profile[ ]+" p "\]" && $1 ~ /region/ {gsub(/ /,""); print $2; exit}' "$AWS_CONFIG_FILE" || true)
    fi
  fi
fi

# Fallback to eu-west-3 (Paris)
REGION=${REGION:-eu-west-3}

# Derive sensible defaults
ECR_REPO=${ECR_REPO:-kiff/backend-lite-v2}
APP_RUNNER_SERVICE=${APP_RUNNER_SERVICE:-kiff-backend-lite-v2}
ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://your-vercel-domain,http://localhost:3000}
DEFAULT_TENANT_ID=${DEFAULT_TENANT_ID:-4485db48-71b7-47b0-8128-c6dca5be352d}
ALLOW_TENANT_FALLBACK=${ALLOW_TENANT_FALLBACK:-false}

mkdir -p "$ROOT_DIR/private"
cat > "$OUT_FILE" <<EOF
# Generated by private/bootstrap_aws_env.sh
AWS_REGION=$REGION
AWS_PROFILE=$PROFILE
ECR_REPO=$ECR_REPO
APP_RUNNER_SERVICE=$APP_RUNNER_SERVICE
ALLOWED_ORIGINS=$ALLOWED_ORIGINS
DEFAULT_TENANT_ID=$DEFAULT_TENANT_ID
ALLOW_TENANT_FALLBACK=$ALLOW_TENANT_FALLBACK
EOF

echo "Wrote $OUT_FILE"
