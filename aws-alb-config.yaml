# ðŸ”’ Secure Application Load Balancer for Kiff VM Infrastructure
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Secure ALB and security monitoring for Kiff VM infrastructure'

Parameters:
  VPCStackName:
    Type: String
    Default: kiff-secure-networking
    Description: Name of the VPC CloudFormation stack

Resources:
  # Application Load Balancer
  KiffALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: kiff-vm-orchestrator-alb
      Type: application
      Scheme: internet-facing
      IpAddressType: ipv4
      Subnets:
        - Fn::ImportValue: !Sub '${VPCStackName}-Public-Subnets'
        - Fn::Select: [0, Fn::Split: [',', Fn::ImportValue: !Sub '${VPCStackName}-Public-Subnets']]
        - Fn::Select: [1, Fn::Split: [',', Fn::ImportValue: !Sub '${VPCStackName}-Public-Subnets']]
      SecurityGroups:
        - !Ref ALBSecurityGroup
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: routing.http2.enabled
          Value: 'true'
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: !Ref ALBLogsBucket
        - Key: deletion_protection.enabled
          Value: 'false'
      Tags:
        - Key: Name
          Value: kiff-vm-orchestrator-alb
        - Key: Environment
          Value: production

  # Target Group for VM Orchestrator
  VMOrchestratorTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: kiff-vm-orchestrator-tg
      Port: 8002
      Protocol: HTTP
      VpcId:
        Fn::ImportValue: !Sub '${VPCStackName}-VPC-ID'
      TargetType: ip
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Matcher:
        HttpCode: '200'
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '30'
        - Key: stickiness.enabled
          Value: 'false'
      Tags:
        - Key: Name
          Value: kiff-vm-orchestrator-tg

  # HTTPS Listener (primary)
  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref VMOrchestratorTargetGroup
      LoadBalancerArn: !Ref KiffALB
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref SSLCertificate
      SslPolicy: ELBSecurityPolicy-TLS-1-2-2017-01

  # HTTP Listener (redirect to HTTPS)
  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: '443'
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref KiffALB
      Port: 80
      Protocol: HTTP

  # SSL Certificate
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: vm.kiff.ai
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: vm.kiff.ai
          HostedZoneId: !Ref HostedZone
      Tags:
        - Key: Name
          Value: kiff-vm-orchestrator-cert

  # Route53 Hosted Zone
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: kiff.ai
      HostedZoneConfig:
        Comment: Kiff AI production hosted zone

  # DNS Record
  VMOrchestratorDNS:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: vm.kiff.ai
      Type: A
      AliasTarget:
        DNSName: !GetAtt KiffALB.DNSName
        HostedZoneId: !GetAtt KiffALB.CanonicalHostedZoneID

  # Security Group for ALB
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Kiff VM orchestrator ALB
      VpcId:
        Fn::ImportValue: !Sub '${VPCStackName}-VPC-ID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: "HTTPS from internet"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "HTTP redirect to HTTPS"
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8002
          ToPort: 8002
          DestinationSecurityGroupId:
            Fn::ImportValue: !Sub '${VPCStackName}-VM-Orchestrator-SG'
          Description: "Forward to VM orchestrator"
      Tags:
        - Key: Name
          Value: kiff-alb-sg

  # S3 Bucket for ALB Access Logs
  ALBLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'kiff-alb-logs-${AWS::AccountId}-${AWS::Region}'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref SecurityMonitoringLogGroup

  # CloudWatch Log Group for Security Monitoring
  SecurityMonitoringLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /security/kiff-vm-orchestrator
      RetentionInDays: 30

  # CloudWatch Alarms for Security Monitoring
  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: kiff-vm-orchestrator-high-error-rate
      AlarmDescription: "High error rate detected in VM orchestrator"
      MetricName: HTTPCode_Target_5XX_Count
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt KiffALB.LoadBalancerFullName
        - Name: TargetGroup
          Value: !GetAtt VMOrchestratorTargetGroup.TargetGroupFullName
      AlarmActions:
        - !Ref SecurityNotificationTopic

  # Suspicious Request Pattern Alarm
  SuspiciousRequestAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: kiff-vm-orchestrator-suspicious-requests
      AlarmDescription: "Suspicious request patterns detected"
      MetricName: RequestCount
      Namespace: AWS/ApplicationELB
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: LoadBalancer
          Value: !GetAtt KiffALB.LoadBalancerFullName
      AlarmActions:
        - !Ref SecurityNotificationTopic

  # SNS Topic for Security Notifications
  SecurityNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: kiff-vm-security-alerts
      DisplayName: "Kiff VM Security Alerts"

  # WAF Web ACL for Additional Security
  KiffWAF:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: kiff-vm-orchestrator-waf
      Scope: REGIONAL
      DefaultAction:
        Allow: {}
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 1
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CommonRuleSetMetric
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
        - Name: RateLimitRule
          Priority: 2
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimitMetric
          Statement:
            RateBasedStatement:
              Limit: 2000
              AggregateKeyType: IP
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: KiffVMWAFMetric

  # Associate WAF with ALB
  WAFAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn: !Ref KiffALB
      WebACLArn: !GetAtt KiffWAF.Arn

Outputs:
  LoadBalancerDNS:
    Description: DNS name of the load balancer
    Value: !GetAtt KiffALB.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-ALB-DNS'

  TargetGroupArn:
    Description: ARN of the target group
    Value: !Ref VMOrchestratorTargetGroup
    Export:
      Name: !Sub '${AWS::StackName}-Target-Group-ARN'

  SecurityMonitoringLogGroup:
    Description: CloudWatch log group for security monitoring
    Value: !Ref SecurityMonitoringLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-Security-Log-Group'